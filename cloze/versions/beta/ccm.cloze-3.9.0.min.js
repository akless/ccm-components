{var component={name:"cloze",version:[3,9,0],ccm:{url:"https://akless.github.io/ccm/version/ccm-14.3.0.min.js",integrity:"sha384-/ZqZoywAfDaBe+vcKvL80hO4AwcvyYRYknGrGc+dzN/OkCGswZuA6fcDESREOgqp",crossorigin:"anonymous"},config:{html:{start:{id:"start",inner:{tag:"button",inner:"%caption%",onclick:"%click%"}},main:{id:"main",inner:[{class:"row",id:"keywords"},{id:"box",class:"row",inner:[{id:"text"},{id:"buttons",inner:[{id:"cancel"},{id:"submit"},{id:"finish"},{id:"timer"}]}]}]},keyword:{class:"keyword",inner:"%keyword%",onclick:"%click%"},input:{tag:"input",type:"text",size:10,autocorrect:"off",autocapitalize:"none",required:true,oninput:"%oninput%",onchange:"%onchange%"},button:{tag:"button",inner:"%caption%",onclick:"%click%"},timer:{tag:"span",inner:"%%"}},css:["ccm.load","https://akless.github.io/ccm-components/cloze/resources/default.css"],text:"Hello, [[(W)o(rl)d]]!",captions:{start:"Start",cancel:"Cancel",submit:"Submit",retry:"Retry",finish:"Finish"}},Instance:function(){const self=this;let my;let $;let keywords=[];let results=null;this.init=(callback=>{if(self.inner&&self.inner.innerHTML.trim())self.text=self.inner.innerHTML;callback()});this.ready=(callback=>{$=self.ccm.helper;my=$.privatize(self);const regex_keyword=/\[\[.+?\]\]/g;const regex_given=/\(.+?\)/g;const regex_reference=/^#(\d+)$/;(my.text.match(regex_keyword)||[]).map(keyword=>{keyword=keyword.substr(2,keyword.length-4);if(regex_reference.test(keyword))return keywords.push(keywords[keyword.substr(1)-1]);const entry=[];keyword.split("|").map(keyword=>entry.push(determineKeywordData(keyword.trim())));keywords.push(entry);function determineKeywordData(keyword){const keyw__d=keyword.replace("*","#").replace(regex_given,given=>{const length=given.length-2;given="";for(let i=0;i<length;i++)given+="*";return given});let givens=0;for(let i=0;i<keyw__d.length;i++)if(keyw__d.charAt(i)==="*")givens+=Math.pow(2,i);return{word:keyword.replace(regex_given,given=>given.substr(1,given.length-2)),givens:givens}}});my.text=my.text.replace(regex_keyword,'<span class="gap"></span>');callback()});this.start=(callback=>{results={details:[]};self.logger&&self.logger.log("render");if(my.start_button)$.setContent(self.element,$.html(my.html.start,{caption:my.captions.start,click:start}));else start();callback&&callback();function start(){self.logger&&self.logger.log("start",$.clone(my));const main_elem=$.html(my.html.main);const text_elem=main_elem.querySelector("#text");const cancel_elem=main_elem.querySelector("#cancel");const submit_elem=main_elem.querySelector("#submit");const finish_elem=main_elem.querySelector("#finish");const timer_elem=main_elem.querySelector("#timer");!my.cancel_button&&$.removeElement(cancel_elem);!my.feedback&&$.removeElement(submit_elem);renderKeywords();renderText();renderInitialButtons();renderTimer();$.setContent(self.element,main_elem);self.onstart&&self.onstart(self);function renderKeywords(){const keywords_elem=main_elem.querySelector("#keywords");if(!my.keywords)return $.removeElement(keywords_elem);const entries=[];(my.keywords===true?keywords:my.keywords).map(keyword=>{entries.push($.html(my.html.keyword,{keyword:my.keywords===true?keyword[0].word:keyword,click:function(){this.classList.toggle("marked")}}))});if(my.keywords===true)entries.sort((a,b)=>a.innerHTML.localeCompare(b.innerHTML));entries.map(entry=>keywords_elem.appendChild(entry))}function renderText(){text_elem.innerHTML=my.text;let size=0;keywords.map(keyword=>keyword.map(keyword=>{if(keyword.word.length>size)size=keyword.word.length}));[...main_elem.querySelectorAll(".gap")].map((gap_elem,i)=>{const input=$.html(my.html.input,{oninput:onInput,onchange:onChange});input.onkeypress=input.onkeydown=function(){this.size=this.value.length>10?this.value.length:10};input.onpaste=function(){$.wait(0,()=>this.size=this.value.length>10?this.value.length:10)};if(!my.blank){const keyword=keywords[i][0].word;input.placeholder="";for(let j=0;j<keyword.length;j++)input.placeholder+=Math.pow(2,j)&keywords[i][0].givens?keyword.charAt(j):"_"}gap_elem.appendChild($.html(input));function onInput(){const event_data={gap:1+i,input:this.value};self.logger&&self.logger.log("input",$.clone(event_data));self.oninput&&self.oninput(self,$.clone(event_data))}function onChange(){const event_data={gap:1+i,input:this.value};self.logger&&self.logger.log("change",$.clone(event_data));self.onchange&&self.onchange(self,$.clone(event_data))}})}function renderInitialButtons(){my.cancel_button&&renderButton(cancel_elem,my.captions.cancel,()=>self.oncancel?self.oncancel(self):self.start(callback));my.feedback&&renderButton(submit_elem,my.captions.submit,evaluate);self.onfinish&&renderButton(finish_elem,my.captions.finish,onFinish)}function renderTimer(){if(!my.time||!self.onfinish&&!my.feedback)return $.removeElement(timer_elem);let timer_value=my.time;timer();function timer(){if(!finish_elem)return;$.setContent(timer_elem,$.html(my.html.timer,timer_value));if(timer_value--)$.wait(1e3,timer);else my.feedback?evaluate():onFinish()}}function evaluate(){results.details=[];[...main_elem.querySelectorAll(".gap input")].map((gap,i)=>{const event_data={gap:1+i,input:gap.value,solution:[],correct:false,nearly:false};event_data.solution=[];keywords[i].map(keyword=>{event_data.solution.push(keyword.word);if(keyword.used)return;gap.value=gap.value.trim();if(gap.value===keyword.word)event_data.correct=true;if(gap.value.toLowerCase()===keyword.word.toLowerCase()){event_data.nearly=true;keyword.used=true}self.onvalidation&&!self.onvalidation(self,event_data)});gap.disabled=true;if(!event_data.nearly&&my.solutions)gap.value="";if(my.solutions){let placeholder="";for(let j=0;j<keywords[i].length;j++)if(!keywords[i][j].used){placeholder=keywords[i][j].word;break}gap.setAttribute("placeholder",placeholder);placeholder.length<=0?gap.size=gap.value.length:gap.size=placeholder.length}gap.parentNode.classList.add(event_data.correct?"correct":event_data.nearly?"nearly":"wrong");results.details.push(event_data)});keywords.map(keyword=>keyword.map(keyword=>delete keyword.used));if(results.details.length===0)return;self.logger&&self.logger.log("feedback",$.clone(results));self.onfeedback&&self.onfeedback(self,$.clone(results));updateButtons(true)}function retry(){[...self.element.querySelectorAll(".gap")].map(gap=>{gap.classList.remove("correct","nearly","wrong");const input=gap.querySelector("input");input.disabled=false});self.logger&&self.logger.log("retry");updateButtons(false)}function updateButtons(evaluated){if(!my.feedback)return;if(!evaluated)renderButton(submit_elem,my.captions.submit,evaluate);else if(my.retry&&!my.solutions)renderButton(submit_elem,my.captions.retry,retry);else submit_elem.querySelector("button").disabled=true}function renderButton(element,caption,click){$.setContent(element,$.html(my.html.button,{caption:caption,click:click}))}function onFinish(){if(!self.onfinish)return;if(self.user)self.user.login(proceed);else proceed();function proceed(){results.details.length===0&&evaluate();$.removeElement(finish_elem);$.removeElement(timer_elem);if(self.user)results.user=self.user.data().name;self.logger&&self.logger.log("finish",$.clone(results));$.onFinish(self,results)}}}});this.getValue=(()=>results)}};function p(){window.ccm[v].component(component)}const f="ccm."+component.name+(component.version?"-"+component.version.join("."):"")+".js";if(window.ccm&&null===window.ccm.files[f])window.ccm.files[f]=component;else{const n=window.ccm&&window.ccm.components[component.name];n&&n.ccm&&(component.ccm=n.ccm),"string"==typeof component.ccm&&(component.ccm={url:component.ccm});var v=component.ccm.url.split("/").pop().split("-");if(v.length>1?(v=v[1].split("."),v.pop(),"min"===v[v.length-1]&&v.pop(),v=v.join(".")):v="latest",window.ccm&&window.ccm[v])p();else{const e=document.createElement("script");document.head.appendChild(e),component.ccm.integrity&&e.setAttribute("integrity",component.ccm.integrity),component.ccm.crossorigin&&e.setAttribute("crossorigin",component.ccm.crossorigin),e.onload=function(){p(),document.head.removeChild(e)},e.src=component.ccm.url}}}