{var component={name:"kanban_board",ccm:"https://akless.github.io/ccm/ccm.js",config:{html:{main:{tag:"main",inner:{id:"lanes"}},lane:{tag:"section",class:"lane",inner:[{tag:"header",inner:"%%"},{tag:"article",class:"cards"}]},add:{tag:"footer",onclick:"%%"}},css:["ccm.load","../kanban_board/resources/default.css"],data:{store:["ccm.store"],key:"local"},lanes:["ToDo","Doing","Done"],del:"Do you really want to delete this card?"},Instance:function(){const self=this;let my;let $;this.init=function(callback){if(self.data.store)self.data.store.onchange=(dataset=>{if(!my||!my.dataset||dataset.key!==my.data.key)return;my.dataset=dataset;self.start()});callback()};this.ready=(callback=>{$=self.ccm.helper;my=$.privatize(self);callback()});this.start=(callback=>{$.dataset(my.data,dataset=>{my.dataset=dataset;if(!dataset.lanes)dataset.lanes=[];my.lanes.map((lane,i)=>{if(!dataset.lanes[i])dataset.lanes[i]={cards:[]}});const main_elem=$.html(my.html.main);const lanes_elem=main_elem.querySelector("#lanes");let counter=1;dataset.lanes.map((lane_data,i)=>{const lane_elem=$.html(my.html.lane,my.lanes[i]);const cards_elem=lane_elem.querySelector(".cards");lane_data.cards.map((card_dependency,j)=>{if(card_dependency[2]){card_dependency=$.clone(card_dependency);card_dependency[2].parent=self}let card_elem=document.createElement("div");cards_elem.appendChild(card_elem);counter++;$.solveDependency(card_dependency,card_inst=>{card_inst.start(()=>{card_inst.root.classList.add("card");makeDraggable(card_inst.root);makeDroppable(card_inst.root);card_inst.root.addEventListener("dblclick",()=>{if(!confirm(my.del))return;dataset.lanes[i].cards.splice(j,1);if(my.data.store)my.data.store.set(dataset,()=>self.start())});cards_elem.replaceChild(card_inst.root,card_elem);check();function makeDraggable(card_elem){card_elem.setAttribute("draggable","true");card_elem.addEventListener("dragstart",event=>{event.dataTransfer.setData("text",getPosition(event.target).join(","));[...lanes_elem.querySelectorAll(".cards")].map(cards_elem=>{const placeholder=$.html({class:"placeholder"});placeholder.style.width=event.target.offsetWidth+"px";placeholder.style.height=event.target.offsetHeight+"px";makeDroppable(placeholder);cards_elem.appendChild(placeholder)})});card_elem.addEventListener("dragend",()=>{[...lanes_elem.querySelectorAll(".placeholder")].map(placeholder=>{$.removeElement(placeholder)})})}function makeDroppable(card_elem){card_elem.addEventListener("dragover",event=>event.preventDefault());card_elem.addEventListener("drop",event=>{const from=event.dataTransfer.getData("text").split(",").map(value=>parseInt(value));const to=getPosition(event.target);if(from[0]===to[0]&&(from[1]===to[1]||from[1]===to[1]-1))return;const card_data=dataset.lanes[from[0]].cards[from[1]];dataset.lanes[from[0]].cards[from[1]]=null;dataset.lanes[to[0]].cards.splice(to[1],0,card_data);if(dataset.lanes[from[0]].cards[from[1]]!==null)from[1]++;dataset.lanes[from[0]].cards.splice(from[1],1);if(my.data.store)my.data.store.set(dataset,()=>self.start())})}function getPosition(card_elem){const lane_elem=$.findParentElementByClass(card_elem,"lane");const x=$.makeIterable(lane_elem.parentNode.children).indexOf(lane_elem);const y=$.makeIterable(card_elem.parentNode.children).indexOf(card_elem);return[x,y]}})})});if(my.card&&i===0)lane_elem.appendChild($.html(my.html.add,()=>{const config=$.clone(my.card.config);if(config.data.store)config.data.key=$.generateKey();dataset.lanes[i].cards.push(["ccm.instance",my.card.component,$.toJSON(config)]);if(my.data.store)my.data.store.set(dataset,()=>self.start())}));lanes_elem.appendChild(lane_elem)});check();function check(){if(--counter>0)return;$.setContent(self.element,main_elem);if(callback)callback()}})})}};function p(){window.ccm[v].component(component)}const f="ccm."+component.name+(component.version?"-"+component.version.join("."):"")+".js";if(window.ccm&&null===window.ccm.files[f])window.ccm.files[f]=component;else{const n=window.ccm&&window.ccm.components[component.name];n&&n.ccm&&(component.ccm=n.ccm),"string"==typeof component.ccm&&(component.ccm={url:component.ccm});var v=component.ccm.url.split("/").pop().split("-");if(v.length>1?(v=v[1].split("."),v.pop(),"min"===v[v.length-1]&&v.pop(),v=v.join(".")):v="latest",window.ccm&&window.ccm[v])p();else{const e=document.createElement("script");document.head.appendChild(e),component.ccm.integrity&&e.setAttribute("integrity",component.ccm.integrity),component.ccm.crossorigin&&e.setAttribute("crossorigin",component.ccm.crossorigin),e.onload=function(){p(),document.head.removeChild(e)},e.src=component.ccm.url}}}