{var component={name:"cloze_builder",version:[1,1,0],ccm:{url:"https://akless.github.io/ccm/version/ccm-12.12.0.min.js",integrity:"sha384-1pDRNaBU2okRlEuyNp8icKgmsidtnoBsvFtbReMBrQv1bgQqCun0aw5DuTKu61Ts",crossorigin:"anonymous"},config:{html:{id:"main",inner:[{tag:"legend",class:"text-primary",inner:"Build your Fill-in-the-Blank Text"},{tag:"form",class:"form-horizontal",onsubmit:"%submit%",inner:[{class:"text form-group",inner:[{tag:"label",for:"text",class:"control-label col-md-2",inner:"Your Text:"},{class:"col-md-10",inner:[{id:"text"},{tag:"a",onclick:"%help%",inner:"Help"},{class:"alert alert-info",inner:'Here you can specify the content of your fill-in-the-blank text. Text gaps are marked with double square brackets. Example: "Hello, [[World]]!". If you want to specify certain letters of a solution word, you can mark them with parentheses. In the following example, three letters are given: "Hello, [[W(or)l(d)]]!". If you want to allow several alternative solution words for a text gap, enter them with "|" separated from each other. Example: "My name is [[John|Jane]]".'}]}]},{class:"blank form-group",inner:[{tag:"label",for:"blank",class:"control-label col-md-2",inner:"Blank Gaps:"},{class:"col-md-10",inner:[{class:"checkbox",onchange:"%change%",inner:{tag:"label",inner:{tag:"input",type:"checkbox",id:"blank",name:"blank"}}},{tag:"a",onclick:"%help%",inner:"Help"},{class:"alert alert-info",inner:"Here you can choose whether the text gaps are completely empty, or the length of the searched word and possibly already given letters are visible."}]}]},{class:"keywords form-group",inner:[{tag:"label",for:"keywords",class:"control-label col-md-2",inner:"Provided Answers:"},{class:"col-md-10",inner:[{inner:{tag:"select",onchange:"%change%",class:"form-control",id:"keywords",name:"keywords",inner:[{tag:"option",inner:"None",value:"none"},{tag:"option",inner:"Auto generated",value:"auto"},{tag:"option",inner:"Manually",value:"manually"}]}},{inner:{tag:"input",type:"text",onchange:"%change%",class:"form-control",id:"manually",name:"manually",placeholder:"Comma-separated list of provided answers"}},{tag:"a",onclick:"%help%",inner:"Help"},{class:"alert alert-info",inner:"Here you can set whether the solution words for the gaps in the text are already given, so that they only need to be placed in the correct gap. You can either generate the list of solution words automatically or set the solution words yourself by hand."}]}]},{class:"start_button form-group",inner:[{tag:"label",for:"start_button",class:"control-label col-md-2",inner:"Start Button:"},{class:"col-md-10",inner:[{class:"checkbox",onchange:"%change%",inner:{tag:"label",inner:{tag:"input",type:"checkbox",id:"start_button",name:"start_button"}}},{tag:"a",onclick:"%help%",inner:"Help"},{class:"alert alert-info",inner:"If you select this option, the fill-in-the-blank text will be displayed after clicking on a start button, which will be displayed instead of the fill-in-the-blank text."}]}]},{class:"captions_start form-group",inner:[{tag:"label",for:"captions_start",class:"control-label col-md-2",inner:"Start Button Caption:"},{class:"col-md-10",inner:[{tag:"input",type:"text",onchange:"%change%",class:"form-control",id:"captions_start",name:"captions.start"},{tag:"a",onclick:"%help%",inner:"Help"},{class:"alert alert-info",inner:"Here you can specify the caption of the start button, which starts the fill-in-the-blank text."}]}]},{class:"feedback form-group",inner:[{tag:"label",for:"feedback",class:"control-label col-md-2",inner:"Feedback:"},{class:"col-md-10",inner:[{tag:"select",onchange:"%change%",class:"form-control",id:"feedback",name:"feedback",inner:[{tag:"option",inner:"None",value:"none"},{tag:"option",inner:"Show only correctness",value:"correctness"},{tag:"option",inner:"Show correctness and solutions",value:"solutions"}]},{tag:"a",onclick:"%help%",inner:"Help"},{class:"alert alert-info",inner:"Choose here whether a direct feedback should be displayed for the entered solution. The solution can then be submitted via a submit button. You can choose if the feedback should only reveal the correctness or also the correct solution words."}]}]},{class:"captions_submit form-group",inner:[{tag:"label",for:"captions_submit",class:"control-label col-md-2",inner:"Submit Button Caption:"},{class:"col-md-10",inner:[{tag:"input",type:"text",onchange:"%change%",class:"form-control",id:"captions_submit",name:"captions.submit"},{tag:"a",onclick:"%help%",inner:"Help"},{class:"alert alert-info",inner:"Here you can specify the caption of the submit button, which submits the fill-in-the-blank text and shows the feedback."}]}]},{class:"onfinish_restart form-group",inner:[{tag:"label",for:"onfinish_restart",class:"control-label col-md-2",inner:"Restart after Finish:"},{class:"col-md-10",inner:[{class:"checkbox",onchange:"%change%",inner:{tag:"label",inner:{tag:"input",type:"checkbox",id:"onfinish_restart",name:"onfinish.restart"}}},{tag:"a",onclick:"%help%",inner:"Help"},{class:"alert alert-info",inner:"Select this option to add a finish button to the fill-in-the-blank text that will allow you to restart it."}]}]},{class:"captions_finish form-group",inner:[{tag:"label",for:"captions_finish",class:"control-label col-md-2",inner:"Finish Button Caption:"},{class:"col-md-10",inner:[{tag:"input",type:"text",onchange:"%change%",class:"form-control",id:"captions_finish",name:"captions.finish"},{tag:"a",onclick:"%help%",inner:"Help"},{class:"alert alert-info",inner:"Here you can specify the caption of the finish button, which finishes the use of the fill-in-the-blank text."}]}]},{class:"user form-group",inner:[{tag:"label",for:"user",class:"control-label col-md-2",inner:"Sign-on:"},{class:"col-md-10",inner:[{tag:"select",onchange:"%change%",class:"form-control",id:"user",name:"user",inner:[{tag:"option",inner:"None",value:""},{tag:"option",inner:"Guest Mode",value:"['ccm.instance','https://akless.github.io/ccm-components/user/ccm.user.js',{'sign_on':'guest'}]"},{tag:"option",inner:"Demo Mode",value:"['ccm.instance','https://akless.github.io/ccm-components/user/versions/ccm.user-2.0.0.min.js',{'sign_on':'demo'}]"},{tag:"option",inner:"H-BRS FB02",value:"['ccm.instance','https://akless.github.io/ccm-components/user/versions/ccm.user-2.0.0.min.js',{'sign_on':'hbrsinfkaul'}]"}]},{tag:"a",onclick:"%help%",inner:"Help"},{class:"alert alert-info",inner:["If you select a sign-on mode here, authentication will be requested after the completion of the fill-in-the-blank text and the results will only be submitted if the authentication was successful. The various sign-on modes are described below.",{tag:"h5",inner:"Guest Mode"},{tag:"p",inner:'Every user will automatically logged in as the user "guest". This mode is mostly used for test scenarios.'},{tag:"h5",inner:"Demo Mode"},{tag:"p",inner:"The user can authenticate with any user name and without password. This mode is mostly used for demo scenarios."},{tag:"h5",inner:"H-BRS FB02"},{tag:"p",inner:"In this mode the user has to authenticate with a valid account of the Department of Computer Science of the Hochschule Bonn-Rhein-Sieg."}]}]}]},{class:"time form-group",inner:[{tag:"label",for:"time",class:"control-label col-md-2",inner:"Time Limit:"},{class:"col-md-10",inner:[{inner:[{tag:"input",type:"number",onchange:"%change%",class:"form-control",id:"time",name:"time",placeholder:"Time in seconds"},{tag:"a",onclick:"%help%",inner:"Help"},{class:"alert alert-info",inner:"Here you can specify the number of seconds available to solve the fill-in-the-blank text. The remaining number of seconds is then displayed visually. After expiration of the time, the fill-in-the-blank text is submitted automatically. If you do not specify anything here, there is no time limit for handling the fill-in-the-blank text."}]}]}]},{class:"css form-group",inner:[{tag:"label",for:"css",class:"control-label col-md-2",inner:"Layout:"},{class:"col-md-10",inner:[{tag:"select",onchange:"%change%",class:"form-control",id:"css",name:"css",inner:[{tag:"option",inner:"Default",value:"['ccm.load','https://akless.github.io/ccm-components/cloze/resources/default.css']"},{tag:"option",inner:"LEA-like",value:"['ccm.load','https://akless.github.io/ccm-components/cloze/resources/lea.css']"},{tag:"option",inner:"PBWorks-like",value:"['ccm.load','https://akless.github.io/ccm-components/cloze/resources/pbworks.css','https://cdnjs.cloudflare.com/ajax/libs/normalize/7.0.0/normalize.min.css']"}]},{tag:"a",onclick:"%help%",inner:"Help"},{class:"alert alert-info",inner:"Here you can choose between different layouts, in which the fill-in-the-blank text is then displayed."}]}]},{class:"preview",inner:[{tag:"legend",class:"legend text-primary",inner:"Here's a Preview of what you've Build"},{id:"preview"}]},{class:"submit submit-button form-group",inner:[{class:"col-md-12 text-right",inner:{tag:"input",type:"submit",id:"submit",class:"btn btn-primary"}}]}]}]},css:["ccm.load","https://akless.github.io/ccm-components/cloze_builder/resources/default.css","https://tkless.github.io/ccm-components/lib/bootstrap/css/bootstrap.css",{context:"head",url:"https://tkless.github.io/ccm-components/lib/bootstrap/css/font-face.css"}],editor:["ccm.component","https://tkless.github.io/ccm-components/editor/versions/ccm.editor-1.0.0.min.js",{"settings.modules.toolbar":[[{size:["small",false,"large","huge"]}],["bold","italic","underline"],["blockquote","code-block"],[{header:1},{header:2}],[{list:"ordered"},{list:"bullet"}],[{script:"sub"},{script:"super"}],[{indent:"-1"},{indent:"+1"}],[{color:[]},{background:[]}],[{align:[]}]],"settings.placeholder":"Type here..."}],target:["ccm.component","https://akless.github.io/ccm-components/cloze/versions/ccm.cloze-3.2.0.min.js"],submit_button:true,preview:true,onfinish:{log:true}},Instance:function(){const self=this;let my;let $;let editor;this.ready=(callback=>{$=self.ccm.helper;my=$.privatize(self);prepareStartValues();callback();function prepareStartValues(){my.start_values=my.start_values?$.toDotNotation(my.start_values):{};let config=$.clone(my.target.config);delete config.ccm;delete config.html;delete config.parent;config.css=$.encode(config.css);config=$.toDotNotation(config);config["captions.finish"]="Restart";for(const key in config)if(my.start_values[key]===undefined)my.start_values[key]=config[key];if(Array.isArray(my.start_values.keywords))my.start_values.manually=my.start_values.keywords.join(", ");my.start_values.keywords=my.start_values.keywords?my.start_values.keywords===true?"auto":"manually":"none";my.start_values.feedback=my.start_values.feedback?my.start_values.solutions?"solutions":"correctness":"none";delete my.start_values.solutions;my.start_values=$.protect(my.start_values)}});this.start=(callback=>{$.setContent(self.element,$.html(my.html,{submit:self.submit,change:onChange,help:function(){const this_a=this;$.makeIterable(self.element.querySelectorAll("a")).map(other_a=>other_a!==this_a&&other_a.classList.remove("active"));this.classList.toggle("active")}}));my.editor.start(function(instance){$.setContent(self.element.querySelector("#text"),instance.root);editor=instance;editor.get().on("text-change",onChange);for(const key in my.start_values){let element=self.element.querySelector('[name="'+key+'"]');switch(key){case"captions.start":case"captions.submit":case"captions.finish":case"manually":case"time":if(element)element.value=my.start_values[key];break;case"start_button":case"blank":case"onfinish.restart":if(my.start_values[key]===true&&element)element.checked=true;break;case"css":case"keywords":case"feedback":case"user":element=self.element.querySelector('select[name="'+key+'"] option[value="'+my.start_values[key]+'"]');if(element)element.selected=true;break;case"text":editor.get().root.innerHTML=my.start_values[key];break}}setVisibility();if(my.preview)updatePreview();else $.removeElement(self.element.querySelector(".preview"));if(!my.submit_button)$.removeElement(self.element.querySelector(".submit"));if(typeof my.submit_button==="string")self.element.querySelector("#submit").value=my.submit_button;if(callback)callback()});function setVisibility(){self.element.querySelector(".captions_start").style.display=getInputElementByName("start_button").checked?"block":"none";self.element.querySelector(".captions_submit").style.display=getInputElementByName("feedback").value!=="none"?"block":"none";self.element.querySelector(".captions_finish").style.display=getInputElementByName("onfinish.restart").checked?"block":"none";getInputElementByName("manually").style.display=getInputElementByName("keywords").value==="manually"?"block":"none";function getInputElementByName(name){return self.element.querySelector('[name="'+name+'"]')}}function onChange(){setVisibility();updatePreview();self.onchange&&self.onchange(self)}function updatePreview(){if(!my.preview)return;my.target.start(self.getValue(),instance=>$.setContent(self.element.querySelector("#preview"),instance.root))}});this.submit=(event=>{if(event)event.preventDefault();if(self.onfinish)$.onFinish(self)});this.getValue=(()=>{let result=$.formData(self.element.querySelector("form"));result.text=editor.get().root.innerHTML;if(result.keywords==="manually"){const manually=result.manually.split(",");manually.map(keyword=>keyword.trim());result.keywords=manually}else result.keywords=result.keywords==="auto";delete result.manually;result.solutions=result.feedback==="solutions";result.feedback=result.feedback!=="none";if(!result["onfinish.restart"])delete result["onfinish.restart"];else result["onfinish.log"]=true;result=$.solveDotNotation(result);$.decode(result);return result})}};function p(){window.ccm[v].component(component)}const f="ccm."+component.name+(component.version?"-"+component.version.join("."):"")+".js";if(window.ccm&&null===window.ccm.files[f])window.ccm.files[f]=component;else{const n=window.ccm&&window.ccm.components[component.name];n&&n.ccm&&(component.ccm=n.ccm),"string"==typeof component.ccm&&(component.ccm={url:component.ccm});var v=component.ccm.url.split("/").pop().split("-");if(v.length>1?(v=v[1].split("."),v.pop(),"min"===v[v.length-1]&&v.pop(),v=v.join(".")):v="latest",window.ccm&&window.ccm[v])p();else{const e=document.createElement("script");document.head.appendChild(e),component.ccm.integrity&&e.setAttribute("integrity",component.ccm.integrity),component.ccm.crossorigin&&e.setAttribute("crossorigin",component.ccm.crossorigin),e.onload=function(){p(),document.head.removeChild(e)},e.src=component.ccm.url}}}