{var component={name:"user",ccm:"https://akless.github.io/ccm/ccm.js",config:{html:{logged_in:{id:"logged_in",inner:[{id:"user",inner:"%name%"},{id:"button",inner:{tag:"button",inner:"Logout",onclick:"%click%"}}]},logged_out:{id:"logged_out",inner:{id:"button",inner:{tag:"button",inner:"Login",onclick:"%click%"}}}},context:true,logged_in:false,sign_on:"guest",guest:"guest"},Instance:function(){const self=this;let my;let $;let owner;let dataset=null;const observers={};let loading=false;const waitlist=[];this.init=(callback=>{if(self.context){const context=self.ccm.context.find(self,"user");self.context=context&&context.context||context||false}callback()});this.ready=(callback=>{$=self.ccm.helper;my=$.privatize(self);self.logger&&self.logger.log("ready",my);my.logged_in?self.login(callback):callback()});this.start=(callback=>{if(my.context)return my.context.start(callback);self.logger&&self.logger.log("start",self.isLoggedIn());const main_elem=self.isLoggedIn()?$.html(my.html.logged_in,{name:self.data().name,click:()=>self.logout(self.start)}):$.html(my.html.logged_out,{click:()=>self.login(self.start)});$.setContent(self.element,$.protect(main_elem));callback&&callback();return self});this.login=((callback,propagated)=>{if(my.context)return my.context.login(callback,propagated||owner);if(self.isLoggedIn()){callback&&callback();return self}if(loading){waitlist.push([self.login,callback]);return self}switch(my.sign_on){case"guest":success({id:my.guest});break;case"demo":self.ccm.load({url:"https://ccm.inf.h-brs.de",method:"JSONP",params:{realm:"ccm"}},success);break;case"hbrsinfkaul":self.ccm.load({url:"https://kaul.inf.h-brs.de/login/login.php",method:"JSONP",params:{realm:"hbrsinfkaul"}},success);break;case"LEA":lea();break;case"VCRP_OpenOLAT":const username=prompt("Please enter your OpenOLAT username");const password=prompt("Please enter your OpenOLAT password");self.ccm.load({url:"https://olat.vcrp.de/restapi/auth/"+username,params:{password:password}},success);break}return self;function lea(){const username=prompt("Please enter your LEA username");if(username===null)return;const password=prompt("Please enter your LEA password");if(password===null)return;soap({domain:"http://ilias-ccm.bib.h-brs.de",url:"http://ilias-ccm.bib.h-brs.de/webservice/soap/server.php",method:"login",params:{client:"iliasccm",username:username,password:password}},result=>{const token=/>([^>]+::.+)<\/sid>/.exec(result)[1];success({name:username,token:token})},()=>confirm("Try again?")&&lea())}function success(response){dataset=$.filterProperties(response,"id","token","name","email");if(!dataset.id)dataset.id=dataset.name;if(!dataset.name)dataset.name=dataset.id;loading=false;self.logger&&self.logger.log("login",dataset);while(waitlist.length>0)$.action(waitlist.shift());self.element&&self.start();callback&&callback();notify(true,propagated||owner)}});this.logout=((callback,propagated)=>{if(my.context)return my.context.logout(callback,propagated||owner);if(!self.isLoggedIn()){callback&&callback();return self}if(loading){waitlist.push([self.logout,callback]);return self}switch(my.sign_on){case"guest":success();break;case"demo":self.ccm.load({url:"https://ccm.inf.h-brs.de",method:"JSONP",params:{realm:"ccm",token:dataset.token}});success();break;case"hbrsinfkaul":self.ccm.load({url:"https://kaul.inf.h-brs.de/login/logout.php",method:"JSONP",params:{realm:"hbrsinfkaul"}});success();break;case"LEA":soap({domain:"http://ilias-ccm.bib.h-brs.de",url:"http://ilias-ccm.bib.h-brs.de/webservice/soap/server.php",method:"logout",params:{sid:self.data().token}},success);break}return self;function success(){dataset=null;loading=false;self.logger&&self.logger.log("logout");while(waitlist.length>0)$.action(waitlist.shift());self.element&&self.start();callback&&callback();notify(false,propagated||owner)}});this.isLoggedIn=(()=>{if(my.context)return my.context.isLoggedIn();return!!dataset});this.data=(()=>{if(my.context)return my.context.data();return dataset});this.getSignOn=(()=>{if(my.context)return my.context.getSignOn();return my.sign_on});this.addObserver=((observer,callback)=>{if(my.context)return my.context.addObserver(observer,callback);observers[observer]=callback;return self});function notify(event,caller){for(const index in observers){if(index===caller)continue;observers[index](event)}}function soap(settings,success,error){let params="";for(const key in settings.params)params+="<"+key+">"+settings.params[key]+"</"+key+">";const xml=`<?xml version="1.0" encoding="utf-8"?>\n<SOAP-ENV:Envelope\n  xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"\n  SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">\n  <SOAP-ENV:Body>\n    <m:${settings.method} xmlns:m="${settings.domain}">\n      ${params}\n    </m:${settings.method}>\n  </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>`;const request=new XMLHttpRequest;request.open("POST",settings.url,true);request.setRequestHeader("Content-Type","text/xml");request.onreadystatechange=(()=>{if(request.readyState!==4)return;if(request.status===200&&success)success(request.response);if(request.status!==200&&error)error(request.response,request.status)});request.send(xml)}}};function p(){window.ccm[v].component(component)}const f="ccm."+component.name+(component.version?"-"+component.version.join("."):"")+".js";if(window.ccm&&null===window.ccm.files[f])window.ccm.files[f]=component;else{const n=window.ccm&&window.ccm.components[component.name];n&&n.ccm&&(component.ccm=n.ccm),"string"==typeof component.ccm&&(component.ccm={url:component.ccm});var v=component.ccm.url.split("/").pop().split("-");if(v.length>1?(v=v[1].split("."),v.pop(),"min"===v[v.length-1]&&v.pop(),v=v.join(".")):v="latest",window.ccm&&window.ccm[v])p();else{const e=document.createElement("script");document.head.appendChild(e),component.ccm.integrity&&e.setAttribute("integrity",component.ccm.integrity),component.ccm.crossorigin&&e.setAttribute("crossorigin",component.ccm.crossorigin),e.onload=function(){p(),document.head.removeChild(e)},e.src=component.ccm.url}}}