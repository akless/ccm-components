(function(){var component={name:"testsuite",version:[1,0,0],ccm:{url:"https://akless.github.io/ccm/version/ccm-10.1.1.min.js",integrity:"sha384-bLKKGkL3ljIPZtwWfwHj4bBToIgljjVqFFQXGC9xA1thikxdqByuQMNOn4BBitGi",crossorigin:"anonymous"},config:{html:{main:{id:"main",inner:[{id:"summary",inner:[{id:"executed",inner:0},{id:"passed",inner:0},{id:"failed",inner:0}]},{id:"packages"}]},"package":{"class":"package",inner:[{"class":"label",inner:"%%"},{"class":"table"},{"class":"conclusion"}]},test:{"class":"tr",inner:[{"class":"td name",inner:"%%"},{"class":"td result"}]},result:{"class":"%value%",inner:"%value%"},message:{"class":"td details message",inner:"%%"},comparison:{"class":"td details comparison",inner:[{"class":"expected",inner:"%%"},{"class":"actual",inner:"%%"}]}},css:["ccm.load","https://akless.github.io/ccm-components/testsuite/resources/default.css"],onfinish:{log:true}},Instance:function(){var self=this;var my;var setups=[];var finallies=[];this.ready=function(callback){my=self.ccm.helper.privatize(self);if(!my.package)return callback();var array=my.package.split(".");while(array.length>0){if(my.tests.setup)setups.push(my.tests.setup);if(my.tests.finally)finallies.unshift(my.tests.finally);my.tests=my.tests[array.shift()]}callback()};this.start=function(callback){var results={executed:0,passed:0,failed:0,details:{}};if(self.element){var main_elem=self.ccm.helper.html(my.html.main);var packages_elem=main_elem.querySelector("#packages");self.ccm.helper.setContent(self.element,main_elem)}processPackage(my.package||"",my.tests,setups,finallies,finish);function processPackage(package_path,package_obj,setups,finallies,callback){if(package_obj.setup){setups=setups.slice();setups.push(package_obj.setup)}if(package_obj.finally){finallies=finallies.slice();finallies.unshift(package_obj.finally)}if(package_obj.tests)runTests(proceed);else proceed();function proceed(){delete package_obj.setup;delete package_obj.tests;processNextSubpackage();function processNextSubpackage(){for(var key in package_obj){var package=package_obj[key];delete package_obj[key];processPackage((package_path?package_path+".":"")+key,package,setups,finallies,processNextSubpackage);return}callback()}}function runTests(callback){var tests=prepareTests();var i=0;if(self.element){var package_elem=self.ccm.helper.html(my.html.package,package_path);var table_elem=package_elem.querySelector(".table");packages_elem.appendChild(package_elem)}runNextTest();function runNextTest(){if(i===tests.length)return callback();if(self.element){main_elem.querySelector("#executed").appendChild(self.ccm.helper.loading(self));var test_elem=self.ccm.helper.html(my.html.test,tests[i].name);table_elem.appendChild(test_elem);var result_elem=test_elem.querySelector(".result");result_elem.appendChild(self.ccm.helper.loading(self))}var suite={ccm:self.ccm,passed:function(){addResult(true);finishTest()},failed:function(message){addResult(false);if(message)addMessage(message);finishTest()},assertTrue:function(condition){addResult(condition);finishTest()},assertFalse:function(condition){addResult(!condition);finishTest()},assertSame:function(expected,actual){var result=expected===actual;addResult(result);if(!result)addComparison(expected,actual);finishTest()},assertEquals:function(expected,actual){suite.assertSame(JSON.stringify(expected),JSON.stringify(actual))},assertNotSame:function(expected,actual){var result=expected!==actual;addResult(result);finishTest()},assertNotEquals:function(expected,actual){suite.assertNotSame(JSON.stringify(expected),JSON.stringify(actual))}};runSetups(function(){tests[i](suite)});function runSetups(callback){var i=0;runSetup();function runSetup(){if(i===setups.length)return callback();setups[i++](suite,runSetup)}}function addResult(result){var value=result?"passed":"failed";if(result)results.passed++;else results.failed++;if(self.element)self.ccm.helper.setContent(result_elem,self.ccm.helper.html(my.html.result,{value:value}));results.details[package_path+"."+tests[i].name]=result}function addMessage(message){if(self.element)test_elem.appendChild(self.ccm.helper.html(my.html.message,message));results.details[package_path+"."+tests[i].name]=message}function addComparison(expected,actual){if(self.element)test_elem.appendChild(self.ccm.helper.html(my.html.comparison,expected,actual));results.details[package_path+"."+tests[i].name]={expected:expected,actual:actual}}function finishTest(){i++;results.executed++;if(self.element){main_elem.querySelector("#executed").innerHTML=results.executed.toString();main_elem.querySelector("#passed").innerHTML=results.passed.toString();main_elem.querySelector("#failed").innerHTML=results.failed.toString()}runFinallies(runNextTest);function runFinallies(callback){var i=0;runFinally();function runFinally(){if(i===finallies.length)return callback();finallies[i++](suite,runFinally)}}}}function prepareTests(){return Object.keys(package_obj.tests).map(function(key){if(!package_obj.tests[key].name)Object.defineProperty(package_obj.tests[key],"name",{value:key});return package_obj.tests[key]})}}}function finish(){self.ccm.helper.onFinish(self,results);if(callback)callback()}}}};function p(){window.ccm[v].component(component)}var f="ccm."+component.name+(component.version?"-"+component.version.join("."):"")+".js";if(window.ccm&&null===window.ccm.files[f])window.ccm.files[f]=component;else{var n=window.ccm&&window.ccm.components[component.name];n&&n.ccm&&(component.ccm=n.ccm),"string"==typeof component.ccm&&(component.ccm={url:component.ccm});var v=component.ccm.url.split("/").pop().split("-");if(v.length>1?(v=v[1].split("."),v.pop(),"min"===v[v.length-1]&&v.pop(),v=v.join(".")):v="latest",window.ccm&&window.ccm[v])p();else{var e=document.createElement("script");document.head.appendChild(e),component.ccm.integrity&&e.setAttribute("integrity",component.ccm.integrity),component.ccm.crossorigin&&e.setAttribute("crossorigin",component.ccm.crossorigin),e.onload=function(){p(),document.head.removeChild(e)},e.src=component.ccm.url}}})();